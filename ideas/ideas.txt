Concepts for single player Interactive Fiction mode:
----------------------------------------------------
[tkinter] BUG: 'time' is shown across multiple lines
[tkinter] Adjust font size of output area on Linux and OSX. (too small)
[tkinter] implement text styling (instead of stripping it all out)
[tkinter] show non-formatted paragraphs in monospaced font
[tkinter] Add icon for the gui instead of the default Tk icon.
Add optional picture to every MudObject description. (viewable in gui driver/html version only, ofcourse).


Concepts for multiplayer MUD mode (and not really for single player I.F.):
--------------------------------------------------------------------------
Let driver store player's state once in a while (every minute or so), when they logout, and when they get disconnected.
New mud-mode save command that immediately triggers the driver to store the player's state.
Let players define aliases for certain commands (including args) "alias w_s=wield sword"
Write stuff to a logfile for the server admins.
Mailbox system: can mail messages, money and items to other players. Only when mailbox in vicinity (unless wizard)
Notify player if mail arrived.
Simple Bulletin boards. Readonly (except by wizards) and read/write for everyone.
Pets: tame/befriend/abandon (charisma/luck)
Combat: backstab (stealth/charisma/luck/agility?  vs luck/wisdom/agility)
Follow other creatures: follow.  If you have a follower and want to try to stop him: evade
Party: team up with other players and share quest and combat experience
Skills: stealth, lockpicking, ...
Vendors and shops: stock, sell stuff, buy stuff, haggle?
World zones: (optional) timed zone resets to reset to starting configuration. Or global server reset?

Do something with the circlemud xml data:
  http://www.razorvine.net/download/circlemuddata_converters.zip
  original from: http://inventwithpython.com/blog/2012/03/19/circlemud-data-in-xml-format-for-your-text-adventure-game/

DAMAGE TYPES:
  blunt, slash, pierce, water, shock, cold, heat, gas, acid, magic, poison, disease, sonic, psionic,
  trauma/wound, suffocation, deathray, EMP, karma, pressure, decompression, inertia


General ideas/TODO:
-------------------
BUG: Parser: <say "I don't get it"> -> it thinks the message stops at the single quote in "don't". => the verb sayt is unrecognised
BUG: on python3.3, blinker signals aren't removed properly (!wiretap -clear doesn't work)
BUG: on pypy when using readline (linux/osx), and async input thread (servermode=timer),
     driver.input crashes with:  signal.signal(signal.SIGWINCH, self.old_sigwinch)   ValueError: signal() must be called from the main thread
     (code contains a workaround now: readline not enabled on pypy)

Support text style tags in the messages files on disk too. (banner, motd, welcome).
Format them nicely, instead of treating them as unformatted (unless they say so themselves with <unf> tags?)

Extra text style tags?
    <center> text style which centers the line(s) on the screen. (paragraph-level? just like 'formatted'?)
    <line>   add a horizontal line break.
    <unf>    force a new unformatted paragraph (i.e. use monospace font, don't wrap/justify text)
    <clear>  clears the screen

HTTP server mode with HTML+Javascript frontend.
Use mdx_smartypants to automatically add some nice typography (quotes etc) when using HTML/tkinter-output.

Self-modifying rooms/exits to create a more dynamic game world.
Do this with state transitions through conditional exits? Or actually replace exits/locations with new ones?

Exits should be defined more clearly, instead of scattered through the code on a per-room basis:
should there be a single table where all exits are defined? But how to link to code object if it is not a normal plain exit?
Create a two-way exit that connects 2 locations to each other in one go? (by creating 2 Exits/Doors internally?)

Finite-state-machine to support multi-phase actions (such as a short dialog with an npc)?
(note: less suited for MUDs because other people might interfere with the states)

input should be case insensitive (everything except stuff in quotes - the message)
  commands, adverbs, names - all should be lowercased and compared by lowercase.

Load story from a zipfile. VFS should thus be able to load resources from a zipfile too. (don't use setuptools pkg_resources)

Parser: remember previous objects/creatures so you can refer to them as 'it/him/her/them' (as long as they are still in the vicinity)
Parser: allow simple question/answer dialog. 'no/yes' verbs? Use answer/say/tell? (Sate Machine = overkill for a simple question state)?

prototypes to extend items/npc instead of inheritance?
Use a DSL to define the basic world stuff? (including ASCII-art parser to easily define mazes/dungeons)

test what happens when player name == npc name (movement, examine, talk, soul emotes, destroy player)
test what happens with multiple items of same name in room, in inventory, in bag

Change living location logic so that livings can sit inside a container item too.
Then:  go-in (wizard): step into something, go-out (wizard): step out of current location
+ take <living> can actually work! (take ant, trap rabbit in cage, ...)


Light/Dark
----------
light level in rooms: dark/light? or three states?  (0=pitch black, 0.5=dark/dusk, 1=normal daylight)
darkness in locations -> can't see location/exits/items/players (unless they're fluorescent, or unless you explicitly examine <direction>?)
if there's a lightsource in the room (or someone has a light source in their inventory), the room is lit.
 Conditional location description (light/dark etc)
